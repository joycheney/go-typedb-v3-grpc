// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: typedb-service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_typedb_service_proto protoreflect.FileDescriptor

const file_typedb_service_proto_rawDesc = "" +
	"\n" +
	"\x14typedb-service.proto\x12\x0ftypedb.protocol\x1a\x14authentication.proto\x1a\x10connection.proto\x1a\x0edatabase.proto\x1a\fserver.proto\x1a\n" +
	"user.proto\x1a\x11transaction.proto\x1a\x0fmigration.proto2\xfd\x0e\n" +
	"\x06TypeDB\x12]\n" +
	"\x0fconnection_open\x12$.typedb.protocol.Connection.Open.Req\x1a$.typedb.protocol.Connection.Open.Res\x12\x81\x01\n" +
	"\x1bauthentication_token_create\x120.typedb.protocol.Authentication.Token.Create.Req\x1a0.typedb.protocol.Authentication.Token.Create.Res\x12]\n" +
	"\vservers_all\x12&.typedb.protocol.ServerManager.All.Req\x1a&.typedb.protocol.ServerManager.All.Res\x12W\n" +
	"\tusers_get\x12$.typedb.protocol.UserManager.Get.Req\x1a$.typedb.protocol.UserManager.Get.Res\x12W\n" +
	"\tusers_all\x12$.typedb.protocol.UserManager.All.Req\x1a$.typedb.protocol.UserManager.All.Res\x12f\n" +
	"\x0eusers_contains\x12).typedb.protocol.UserManager.Contains.Req\x1a).typedb.protocol.UserManager.Contains.Res\x12`\n" +
	"\fusers_create\x12'.typedb.protocol.UserManager.Create.Req\x1a'.typedb.protocol.UserManager.Create.Res\x12R\n" +
	"\fusers_update\x12 .typedb.protocol.User.Update.Req\x1a .typedb.protocol.User.Update.Res\x12R\n" +
	"\fusers_delete\x12 .typedb.protocol.User.Delete.Req\x1a .typedb.protocol.User.Delete.Res\x12c\n" +
	"\rdatabases_get\x12(.typedb.protocol.DatabaseManager.Get.Req\x1a(.typedb.protocol.DatabaseManager.Get.Res\x12c\n" +
	"\rdatabases_all\x12(.typedb.protocol.DatabaseManager.All.Req\x1a(.typedb.protocol.DatabaseManager.All.Res\x12r\n" +
	"\x12databases_contains\x12-.typedb.protocol.DatabaseManager.Contains.Req\x1a-.typedb.protocol.DatabaseManager.Contains.Res\x12l\n" +
	"\x10databases_create\x12+.typedb.protocol.DatabaseManager.Create.Req\x1a+.typedb.protocol.DatabaseManager.Create.Res\x12v\n" +
	"\x10databases_import\x12..typedb.protocol.DatabaseManager.Import.Client\x1a..typedb.protocol.DatabaseManager.Import.Server(\x010\x01\x12]\n" +
	"\x0fdatabase_schema\x12$.typedb.protocol.Database.Schema.Req\x1a$.typedb.protocol.Database.Schema.Res\x12j\n" +
	"\x14database_type_schema\x12(.typedb.protocol.Database.TypeSchema.Req\x1a(.typedb.protocol.Database.TypeSchema.Res\x12]\n" +
	"\x0fdatabase_delete\x12$.typedb.protocol.Database.Delete.Req\x1a$.typedb.protocol.Database.Delete.Res\x12b\n" +
	"\x0fdatabase_export\x12$.typedb.protocol.Database.Export.Req\x1a'.typedb.protocol.Database.Export.Server0\x01\x12[\n" +
	"\vtransaction\x12#.typedb.protocol.Transaction.Client\x1a#.typedb.protocol.Transaction.Server(\x010\x01B1Z/github.com/joycheney/go-typedb-v3-grpc/pb/protob\x06proto3"

var file_typedb_service_proto_goTypes = []any{
	(*Connection_Open_Req)(nil),             // 0: typedb.protocol.Connection.Open.Req
	(*Authentication_Token_Create_Req)(nil), // 1: typedb.protocol.Authentication.Token.Create.Req
	(*ServerManager_All_Req)(nil),           // 2: typedb.protocol.ServerManager.All.Req
	(*UserManager_Get_Req)(nil),             // 3: typedb.protocol.UserManager.Get.Req
	(*UserManager_All_Req)(nil),             // 4: typedb.protocol.UserManager.All.Req
	(*UserManager_Contains_Req)(nil),        // 5: typedb.protocol.UserManager.Contains.Req
	(*UserManager_Create_Req)(nil),          // 6: typedb.protocol.UserManager.Create.Req
	(*User_Update_Req)(nil),                 // 7: typedb.protocol.User.Update.Req
	(*User_Delete_Req)(nil),                 // 8: typedb.protocol.User.Delete.Req
	(*DatabaseManager_Get_Req)(nil),         // 9: typedb.protocol.DatabaseManager.Get.Req
	(*DatabaseManager_All_Req)(nil),         // 10: typedb.protocol.DatabaseManager.All.Req
	(*DatabaseManager_Contains_Req)(nil),    // 11: typedb.protocol.DatabaseManager.Contains.Req
	(*DatabaseManager_Create_Req)(nil),      // 12: typedb.protocol.DatabaseManager.Create.Req
	(*DatabaseManager_Import_Client)(nil),   // 13: typedb.protocol.DatabaseManager.Import.Client
	(*Database_Schema_Req)(nil),             // 14: typedb.protocol.Database.Schema.Req
	(*Database_TypeSchema_Req)(nil),         // 15: typedb.protocol.Database.TypeSchema.Req
	(*Database_Delete_Req)(nil),             // 16: typedb.protocol.Database.Delete.Req
	(*Database_Export_Req)(nil),             // 17: typedb.protocol.Database.Export.Req
	(*Transaction_Client)(nil),              // 18: typedb.protocol.Transaction.Client
	(*Connection_Open_Res)(nil),             // 19: typedb.protocol.Connection.Open.Res
	(*Authentication_Token_Create_Res)(nil), // 20: typedb.protocol.Authentication.Token.Create.Res
	(*ServerManager_All_Res)(nil),           // 21: typedb.protocol.ServerManager.All.Res
	(*UserManager_Get_Res)(nil),             // 22: typedb.protocol.UserManager.Get.Res
	(*UserManager_All_Res)(nil),             // 23: typedb.protocol.UserManager.All.Res
	(*UserManager_Contains_Res)(nil),        // 24: typedb.protocol.UserManager.Contains.Res
	(*UserManager_Create_Res)(nil),          // 25: typedb.protocol.UserManager.Create.Res
	(*User_Update_Res)(nil),                 // 26: typedb.protocol.User.Update.Res
	(*User_Delete_Res)(nil),                 // 27: typedb.protocol.User.Delete.Res
	(*DatabaseManager_Get_Res)(nil),         // 28: typedb.protocol.DatabaseManager.Get.Res
	(*DatabaseManager_All_Res)(nil),         // 29: typedb.protocol.DatabaseManager.All.Res
	(*DatabaseManager_Contains_Res)(nil),    // 30: typedb.protocol.DatabaseManager.Contains.Res
	(*DatabaseManager_Create_Res)(nil),      // 31: typedb.protocol.DatabaseManager.Create.Res
	(*DatabaseManager_Import_Server)(nil),   // 32: typedb.protocol.DatabaseManager.Import.Server
	(*Database_Schema_Res)(nil),             // 33: typedb.protocol.Database.Schema.Res
	(*Database_TypeSchema_Res)(nil),         // 34: typedb.protocol.Database.TypeSchema.Res
	(*Database_Delete_Res)(nil),             // 35: typedb.protocol.Database.Delete.Res
	(*Database_Export_Server)(nil),          // 36: typedb.protocol.Database.Export.Server
	(*Transaction_Server)(nil),              // 37: typedb.protocol.Transaction.Server
}
var file_typedb_service_proto_depIdxs = []int32{
	0,  // 0: typedb.protocol.TypeDB.connection_open:input_type -> typedb.protocol.Connection.Open.Req
	1,  // 1: typedb.protocol.TypeDB.authentication_token_create:input_type -> typedb.protocol.Authentication.Token.Create.Req
	2,  // 2: typedb.protocol.TypeDB.servers_all:input_type -> typedb.protocol.ServerManager.All.Req
	3,  // 3: typedb.protocol.TypeDB.users_get:input_type -> typedb.protocol.UserManager.Get.Req
	4,  // 4: typedb.protocol.TypeDB.users_all:input_type -> typedb.protocol.UserManager.All.Req
	5,  // 5: typedb.protocol.TypeDB.users_contains:input_type -> typedb.protocol.UserManager.Contains.Req
	6,  // 6: typedb.protocol.TypeDB.users_create:input_type -> typedb.protocol.UserManager.Create.Req
	7,  // 7: typedb.protocol.TypeDB.users_update:input_type -> typedb.protocol.User.Update.Req
	8,  // 8: typedb.protocol.TypeDB.users_delete:input_type -> typedb.protocol.User.Delete.Req
	9,  // 9: typedb.protocol.TypeDB.databases_get:input_type -> typedb.protocol.DatabaseManager.Get.Req
	10, // 10: typedb.protocol.TypeDB.databases_all:input_type -> typedb.protocol.DatabaseManager.All.Req
	11, // 11: typedb.protocol.TypeDB.databases_contains:input_type -> typedb.protocol.DatabaseManager.Contains.Req
	12, // 12: typedb.protocol.TypeDB.databases_create:input_type -> typedb.protocol.DatabaseManager.Create.Req
	13, // 13: typedb.protocol.TypeDB.databases_import:input_type -> typedb.protocol.DatabaseManager.Import.Client
	14, // 14: typedb.protocol.TypeDB.database_schema:input_type -> typedb.protocol.Database.Schema.Req
	15, // 15: typedb.protocol.TypeDB.database_type_schema:input_type -> typedb.protocol.Database.TypeSchema.Req
	16, // 16: typedb.protocol.TypeDB.database_delete:input_type -> typedb.protocol.Database.Delete.Req
	17, // 17: typedb.protocol.TypeDB.database_export:input_type -> typedb.protocol.Database.Export.Req
	18, // 18: typedb.protocol.TypeDB.transaction:input_type -> typedb.protocol.Transaction.Client
	19, // 19: typedb.protocol.TypeDB.connection_open:output_type -> typedb.protocol.Connection.Open.Res
	20, // 20: typedb.protocol.TypeDB.authentication_token_create:output_type -> typedb.protocol.Authentication.Token.Create.Res
	21, // 21: typedb.protocol.TypeDB.servers_all:output_type -> typedb.protocol.ServerManager.All.Res
	22, // 22: typedb.protocol.TypeDB.users_get:output_type -> typedb.protocol.UserManager.Get.Res
	23, // 23: typedb.protocol.TypeDB.users_all:output_type -> typedb.protocol.UserManager.All.Res
	24, // 24: typedb.protocol.TypeDB.users_contains:output_type -> typedb.protocol.UserManager.Contains.Res
	25, // 25: typedb.protocol.TypeDB.users_create:output_type -> typedb.protocol.UserManager.Create.Res
	26, // 26: typedb.protocol.TypeDB.users_update:output_type -> typedb.protocol.User.Update.Res
	27, // 27: typedb.protocol.TypeDB.users_delete:output_type -> typedb.protocol.User.Delete.Res
	28, // 28: typedb.protocol.TypeDB.databases_get:output_type -> typedb.protocol.DatabaseManager.Get.Res
	29, // 29: typedb.protocol.TypeDB.databases_all:output_type -> typedb.protocol.DatabaseManager.All.Res
	30, // 30: typedb.protocol.TypeDB.databases_contains:output_type -> typedb.protocol.DatabaseManager.Contains.Res
	31, // 31: typedb.protocol.TypeDB.databases_create:output_type -> typedb.protocol.DatabaseManager.Create.Res
	32, // 32: typedb.protocol.TypeDB.databases_import:output_type -> typedb.protocol.DatabaseManager.Import.Server
	33, // 33: typedb.protocol.TypeDB.database_schema:output_type -> typedb.protocol.Database.Schema.Res
	34, // 34: typedb.protocol.TypeDB.database_type_schema:output_type -> typedb.protocol.Database.TypeSchema.Res
	35, // 35: typedb.protocol.TypeDB.database_delete:output_type -> typedb.protocol.Database.Delete.Res
	36, // 36: typedb.protocol.TypeDB.database_export:output_type -> typedb.protocol.Database.Export.Server
	37, // 37: typedb.protocol.TypeDB.transaction:output_type -> typedb.protocol.Transaction.Server
	19, // [19:38] is the sub-list for method output_type
	0,  // [0:19] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_typedb_service_proto_init() }
func file_typedb_service_proto_init() {
	if File_typedb_service_proto != nil {
		return
	}
	file_authentication_proto_init()
	file_connection_proto_init()
	file_database_proto_init()
	file_server_proto_init()
	file_user_proto_init()
	file_transaction_proto_init()
	file_migration_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_typedb_service_proto_rawDesc), len(file_typedb_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_typedb_service_proto_goTypes,
		DependencyIndexes: file_typedb_service_proto_depIdxs,
	}.Build()
	File_typedb_service_proto = out.File
	file_typedb_service_proto_goTypes = nil
	file_typedb_service_proto_depIdxs = nil
}
