// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: proto/query.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Query_Type int32

const (
	Query_READ   Query_Type = 0
	Query_WRITE  Query_Type = 1
	Query_SCHEMA Query_Type = 2
)

// Enum value maps for Query_Type.
var (
	Query_Type_name = map[int32]string{
		0: "READ",
		1: "WRITE",
		2: "SCHEMA",
	}
	Query_Type_value = map[string]int32{
		"READ":   0,
		"WRITE":  1,
		"SCHEMA": 2,
	}
)

func (x Query_Type) Enum() *Query_Type {
	p := new(Query_Type)
	*p = x
	return p
}

func (x Query_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Query_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_query_proto_enumTypes[0].Descriptor()
}

func (Query_Type) Type() protoreflect.EnumType {
	return &file_proto_query_proto_enumTypes[0]
}

func (x Query_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Query_Type.Descriptor instead.
func (Query_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_query_proto_rawDescGZIP(), []int{0, 0}
}

type Query struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_proto_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_proto_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_proto_query_proto_rawDescGZIP(), []int{0}
}

type Query_Req struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *Options_Query         `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query_Req) Reset() {
	*x = Query_Req{}
	mi := &file_proto_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query_Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query_Req) ProtoMessage() {}

func (x *Query_Req) ProtoReflect() protoreflect.Message {
	mi := &file_proto_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query_Req.ProtoReflect.Descriptor instead.
func (*Query_Req) Descriptor() ([]byte, []int) {
	return file_proto_query_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Query_Req) GetOptions() *Options_Query {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Query_Req) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type Query_InitialRes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Res:
	//
	//	*Query_InitialRes_Error
	//	*Query_InitialRes_Ok_
	Res           isQuery_InitialRes_Res `protobuf_oneof:"res"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query_InitialRes) Reset() {
	*x = Query_InitialRes{}
	mi := &file_proto_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query_InitialRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query_InitialRes) ProtoMessage() {}

func (x *Query_InitialRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query_InitialRes.ProtoReflect.Descriptor instead.
func (*Query_InitialRes) Descriptor() ([]byte, []int) {
	return file_proto_query_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Query_InitialRes) GetRes() isQuery_InitialRes_Res {
	if x != nil {
		return x.Res
	}
	return nil
}

func (x *Query_InitialRes) GetError() *Error {
	if x != nil {
		if x, ok := x.Res.(*Query_InitialRes_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *Query_InitialRes) GetOk() *Query_InitialRes_Ok {
	if x != nil {
		if x, ok := x.Res.(*Query_InitialRes_Ok_); ok {
			return x.Ok
		}
	}
	return nil
}

type isQuery_InitialRes_Res interface {
	isQuery_InitialRes_Res()
}

type Query_InitialRes_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type Query_InitialRes_Ok_ struct {
	Ok *Query_InitialRes_Ok `protobuf:"bytes,2,opt,name=ok,proto3,oneof"`
}

func (*Query_InitialRes_Error) isQuery_InitialRes_Res() {}

func (*Query_InitialRes_Ok_) isQuery_InitialRes_Res() {}

type Query_ResPart struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Res:
	//
	//	*Query_ResPart_DocumentsRes
	//	*Query_ResPart_RowsRes
	Res           isQuery_ResPart_Res `protobuf_oneof:"res"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query_ResPart) Reset() {
	*x = Query_ResPart{}
	mi := &file_proto_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query_ResPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query_ResPart) ProtoMessage() {}

func (x *Query_ResPart) ProtoReflect() protoreflect.Message {
	mi := &file_proto_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query_ResPart.ProtoReflect.Descriptor instead.
func (*Query_ResPart) Descriptor() ([]byte, []int) {
	return file_proto_query_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Query_ResPart) GetRes() isQuery_ResPart_Res {
	if x != nil {
		return x.Res
	}
	return nil
}

func (x *Query_ResPart) GetDocumentsRes() *Query_ResPart_ConceptDocumentsRes {
	if x != nil {
		if x, ok := x.Res.(*Query_ResPart_DocumentsRes); ok {
			return x.DocumentsRes
		}
	}
	return nil
}

func (x *Query_ResPart) GetRowsRes() *Query_ResPart_ConceptRowsRes {
	if x != nil {
		if x, ok := x.Res.(*Query_ResPart_RowsRes); ok {
			return x.RowsRes
		}
	}
	return nil
}

type isQuery_ResPart_Res interface {
	isQuery_ResPart_Res()
}

type Query_ResPart_DocumentsRes struct {
	DocumentsRes *Query_ResPart_ConceptDocumentsRes `protobuf:"bytes,1,opt,name=documents_res,json=documentsRes,proto3,oneof"`
}

type Query_ResPart_RowsRes struct {
	RowsRes *Query_ResPart_ConceptRowsRes `protobuf:"bytes,2,opt,name=rows_res,json=rowsRes,proto3,oneof"`
}

func (*Query_ResPart_DocumentsRes) isQuery_ResPart_Res() {}

func (*Query_ResPart_RowsRes) isQuery_ResPart_Res() {}

type Query_InitialRes_Ok struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Ok:
	//
	//	*Query_InitialRes_Ok_Done_
	//	*Query_InitialRes_Ok_ConceptDocumentStream_
	//	*Query_InitialRes_Ok_ConceptRowStream_
	Ok            isQuery_InitialRes_Ok_Ok `protobuf_oneof:"ok"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query_InitialRes_Ok) Reset() {
	*x = Query_InitialRes_Ok{}
	mi := &file_proto_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query_InitialRes_Ok) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query_InitialRes_Ok) ProtoMessage() {}

func (x *Query_InitialRes_Ok) ProtoReflect() protoreflect.Message {
	mi := &file_proto_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query_InitialRes_Ok.ProtoReflect.Descriptor instead.
func (*Query_InitialRes_Ok) Descriptor() ([]byte, []int) {
	return file_proto_query_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Query_InitialRes_Ok) GetOk() isQuery_InitialRes_Ok_Ok {
	if x != nil {
		return x.Ok
	}
	return nil
}

func (x *Query_InitialRes_Ok) GetDone() *Query_InitialRes_Ok_Done {
	if x != nil {
		if x, ok := x.Ok.(*Query_InitialRes_Ok_Done_); ok {
			return x.Done
		}
	}
	return nil
}

func (x *Query_InitialRes_Ok) GetConceptDocumentStream() *Query_InitialRes_Ok_ConceptDocumentStream {
	if x != nil {
		if x, ok := x.Ok.(*Query_InitialRes_Ok_ConceptDocumentStream_); ok {
			return x.ConceptDocumentStream
		}
	}
	return nil
}

func (x *Query_InitialRes_Ok) GetConceptRowStream() *Query_InitialRes_Ok_ConceptRowStream {
	if x != nil {
		if x, ok := x.Ok.(*Query_InitialRes_Ok_ConceptRowStream_); ok {
			return x.ConceptRowStream
		}
	}
	return nil
}

type isQuery_InitialRes_Ok_Ok interface {
	isQuery_InitialRes_Ok_Ok()
}

type Query_InitialRes_Ok_Done_ struct {
	Done *Query_InitialRes_Ok_Done `protobuf:"bytes,1,opt,name=done,proto3,oneof"`
}

type Query_InitialRes_Ok_ConceptDocumentStream_ struct {
	ConceptDocumentStream *Query_InitialRes_Ok_ConceptDocumentStream `protobuf:"bytes,3,opt,name=concept_document_stream,json=conceptDocumentStream,proto3,oneof"`
}

type Query_InitialRes_Ok_ConceptRowStream_ struct {
	ConceptRowStream *Query_InitialRes_Ok_ConceptRowStream `protobuf:"bytes,4,opt,name=concept_row_stream,json=conceptRowStream,proto3,oneof"`
}

func (*Query_InitialRes_Ok_Done_) isQuery_InitialRes_Ok_Ok() {}

func (*Query_InitialRes_Ok_ConceptDocumentStream_) isQuery_InitialRes_Ok_Ok() {}

func (*Query_InitialRes_Ok_ConceptRowStream_) isQuery_InitialRes_Ok_Ok() {}

type Query_InitialRes_Ok_Done struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueryType     Query_Type             `protobuf:"varint,1,opt,name=query_type,json=queryType,proto3,enum=typedb.protocol.Query_Type" json:"query_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query_InitialRes_Ok_Done) Reset() {
	*x = Query_InitialRes_Ok_Done{}
	mi := &file_proto_query_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query_InitialRes_Ok_Done) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query_InitialRes_Ok_Done) ProtoMessage() {}

func (x *Query_InitialRes_Ok_Done) ProtoReflect() protoreflect.Message {
	mi := &file_proto_query_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query_InitialRes_Ok_Done.ProtoReflect.Descriptor instead.
func (*Query_InitialRes_Ok_Done) Descriptor() ([]byte, []int) {
	return file_proto_query_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

func (x *Query_InitialRes_Ok_Done) GetQueryType() Query_Type {
	if x != nil {
		return x.QueryType
	}
	return Query_READ
}

type Query_InitialRes_Ok_ConceptDocumentStream struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// note: we could use this first response to record debug info, type annotations, warnings, etc
	// TODO: network optimisation: replace keys with IDs, sending keys in the header to rebuild the document on the client side
	// TODO: network optimisation: replace types (== mostly constant strings) with a IDs, sending types in the header to rebuild on the client side
	QueryType     Query_Type `protobuf:"varint,2,opt,name=query_type,json=queryType,proto3,enum=typedb.protocol.Query_Type" json:"query_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query_InitialRes_Ok_ConceptDocumentStream) Reset() {
	*x = Query_InitialRes_Ok_ConceptDocumentStream{}
	mi := &file_proto_query_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query_InitialRes_Ok_ConceptDocumentStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query_InitialRes_Ok_ConceptDocumentStream) ProtoMessage() {}

func (x *Query_InitialRes_Ok_ConceptDocumentStream) ProtoReflect() protoreflect.Message {
	mi := &file_proto_query_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query_InitialRes_Ok_ConceptDocumentStream.ProtoReflect.Descriptor instead.
func (*Query_InitialRes_Ok_ConceptDocumentStream) Descriptor() ([]byte, []int) {
	return file_proto_query_proto_rawDescGZIP(), []int{0, 1, 0, 1}
}

func (x *Query_InitialRes_Ok_ConceptDocumentStream) GetQueryType() Query_Type {
	if x != nil {
		return x.QueryType
	}
	return Query_READ
}

type Query_InitialRes_Ok_ConceptRowStream struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TODO: network optimisation: replace types (== mostly constant strings) with a IDs, sending types in the header to rebuild on the client side
	ColumnVariableNames []string   `protobuf:"bytes,1,rep,name=column_variable_names,json=columnVariableNames,proto3" json:"column_variable_names,omitempty"`
	QueryType           Query_Type `protobuf:"varint,2,opt,name=query_type,json=queryType,proto3,enum=typedb.protocol.Query_Type" json:"query_type,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Query_InitialRes_Ok_ConceptRowStream) Reset() {
	*x = Query_InitialRes_Ok_ConceptRowStream{}
	mi := &file_proto_query_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query_InitialRes_Ok_ConceptRowStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query_InitialRes_Ok_ConceptRowStream) ProtoMessage() {}

func (x *Query_InitialRes_Ok_ConceptRowStream) ProtoReflect() protoreflect.Message {
	mi := &file_proto_query_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query_InitialRes_Ok_ConceptRowStream.ProtoReflect.Descriptor instead.
func (*Query_InitialRes_Ok_ConceptRowStream) Descriptor() ([]byte, []int) {
	return file_proto_query_proto_rawDescGZIP(), []int{0, 1, 0, 2}
}

func (x *Query_InitialRes_Ok_ConceptRowStream) GetColumnVariableNames() []string {
	if x != nil {
		return x.ColumnVariableNames
	}
	return nil
}

func (x *Query_InitialRes_Ok_ConceptRowStream) GetQueryType() Query_Type {
	if x != nil {
		return x.QueryType
	}
	return Query_READ
}

type Query_ResPart_ConceptDocumentsRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Documents     []*ConceptDocument     `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query_ResPart_ConceptDocumentsRes) Reset() {
	*x = Query_ResPart_ConceptDocumentsRes{}
	mi := &file_proto_query_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query_ResPart_ConceptDocumentsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query_ResPart_ConceptDocumentsRes) ProtoMessage() {}

func (x *Query_ResPart_ConceptDocumentsRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_query_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query_ResPart_ConceptDocumentsRes.ProtoReflect.Descriptor instead.
func (*Query_ResPart_ConceptDocumentsRes) Descriptor() ([]byte, []int) {
	return file_proto_query_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *Query_ResPart_ConceptDocumentsRes) GetDocuments() []*ConceptDocument {
	if x != nil {
		return x.Documents
	}
	return nil
}

type Query_ResPart_ConceptRowsRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rows          []*ConceptRow          `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query_ResPart_ConceptRowsRes) Reset() {
	*x = Query_ResPart_ConceptRowsRes{}
	mi := &file_proto_query_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query_ResPart_ConceptRowsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query_ResPart_ConceptRowsRes) ProtoMessage() {}

func (x *Query_ResPart_ConceptRowsRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_query_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query_ResPart_ConceptRowsRes.ProtoReflect.Descriptor instead.
func (*Query_ResPart_ConceptRowsRes) Descriptor() ([]byte, []int) {
	return file_proto_query_proto_rawDescGZIP(), []int{0, 2, 1}
}

func (x *Query_ResPart_ConceptRowsRes) GetRows() []*ConceptRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

var File_proto_query_proto protoreflect.FileDescriptor

const file_proto_query_proto_rawDesc = "" +
	"\n" +
	"\x11proto/query.proto\x12\x0ftypedb.protocol\x1a\x12proto/answer.proto\x1a\x13proto/options.proto\x1a\x11proto/error.proto\"\xa2\t\n" +
	"\x05Query\x1aU\n" +
	"\x03Req\x128\n" +
	"\aoptions\x18\x01 \x01(\v2\x1e.typedb.protocol.Options.QueryR\aoptions\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x1a\xc4\x05\n" +
	"\n" +
	"InitialRes\x12.\n" +
	"\x05error\x18\x01 \x01(\v2\x16.typedb.protocol.ErrorH\x00R\x05error\x126\n" +
	"\x02ok\x18\x02 \x01(\v2$.typedb.protocol.Query.InitialRes.OkH\x00R\x02ok\x1a\xc6\x04\n" +
	"\x02Ok\x12?\n" +
	"\x04done\x18\x01 \x01(\v2).typedb.protocol.Query.InitialRes.Ok.DoneH\x00R\x04done\x12t\n" +
	"\x17concept_document_stream\x18\x03 \x01(\v2:.typedb.protocol.Query.InitialRes.Ok.ConceptDocumentStreamH\x00R\x15conceptDocumentStream\x12e\n" +
	"\x12concept_row_stream\x18\x04 \x01(\v25.typedb.protocol.Query.InitialRes.Ok.ConceptRowStreamH\x00R\x10conceptRowStream\x1aB\n" +
	"\x04Done\x12:\n" +
	"\n" +
	"query_type\x18\x01 \x01(\x0e2\x1b.typedb.protocol.Query.TypeR\tqueryType\x1aS\n" +
	"\x15ConceptDocumentStream\x12:\n" +
	"\n" +
	"query_type\x18\x02 \x01(\x0e2\x1b.typedb.protocol.Query.TypeR\tqueryType\x1a\x82\x01\n" +
	"\x10ConceptRowStream\x122\n" +
	"\x15column_variable_names\x18\x01 \x03(\tR\x13columnVariableNames\x12:\n" +
	"\n" +
	"query_type\x18\x02 \x01(\x0e2\x1b.typedb.protocol.Query.TypeR\tqueryTypeB\x04\n" +
	"\x02okB\x05\n" +
	"\x03res\x1a\xd1\x02\n" +
	"\aResPart\x12Y\n" +
	"\rdocuments_res\x18\x01 \x01(\v22.typedb.protocol.Query.ResPart.ConceptDocumentsResH\x00R\fdocumentsRes\x12J\n" +
	"\brows_res\x18\x02 \x01(\v2-.typedb.protocol.Query.ResPart.ConceptRowsResH\x00R\arowsRes\x1aU\n" +
	"\x13ConceptDocumentsRes\x12>\n" +
	"\tdocuments\x18\x01 \x03(\v2 .typedb.protocol.ConceptDocumentR\tdocuments\x1aA\n" +
	"\x0eConceptRowsRes\x12/\n" +
	"\x04rows\x18\x01 \x03(\v2\x1b.typedb.protocol.ConceptRowR\x04rowsB\x05\n" +
	"\x03res\"'\n" +
	"\x04Type\x12\b\n" +
	"\x04READ\x10\x00\x12\t\n" +
	"\x05WRITE\x10\x01\x12\n" +
	"\n" +
	"\x06SCHEMA\x10\x02BCZAgithub.com/joycheney/go-typedb-v3-grpc/pbb\x06proto3"

var (
	file_proto_query_proto_rawDescOnce sync.Once
	file_proto_query_proto_rawDescData []byte
)

func file_proto_query_proto_rawDescGZIP() []byte {
	file_proto_query_proto_rawDescOnce.Do(func() {
		file_proto_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_query_proto_rawDesc), len(file_proto_query_proto_rawDesc)))
	})
	return file_proto_query_proto_rawDescData
}

var file_proto_query_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_query_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_query_proto_goTypes = []any{
	(Query_Type)(0),                                   // 0: typedb.protocol.Query.Type
	(*Query)(nil),                                     // 1: typedb.protocol.Query
	(*Query_Req)(nil),                                 // 2: typedb.protocol.Query.Req
	(*Query_InitialRes)(nil),                          // 3: typedb.protocol.Query.InitialRes
	(*Query_ResPart)(nil),                             // 4: typedb.protocol.Query.ResPart
	(*Query_InitialRes_Ok)(nil),                       // 5: typedb.protocol.Query.InitialRes.Ok
	(*Query_InitialRes_Ok_Done)(nil),                  // 6: typedb.protocol.Query.InitialRes.Ok.Done
	(*Query_InitialRes_Ok_ConceptDocumentStream)(nil), // 7: typedb.protocol.Query.InitialRes.Ok.ConceptDocumentStream
	(*Query_InitialRes_Ok_ConceptRowStream)(nil),      // 8: typedb.protocol.Query.InitialRes.Ok.ConceptRowStream
	(*Query_ResPart_ConceptDocumentsRes)(nil),         // 9: typedb.protocol.Query.ResPart.ConceptDocumentsRes
	(*Query_ResPart_ConceptRowsRes)(nil),              // 10: typedb.protocol.Query.ResPart.ConceptRowsRes
	(*Options_Query)(nil),                             // 11: typedb.protocol.Options.Query
	(*Error)(nil),                                     // 12: typedb.protocol.Error
	(*ConceptDocument)(nil),                           // 13: typedb.protocol.ConceptDocument
	(*ConceptRow)(nil),                                // 14: typedb.protocol.ConceptRow
}
var file_proto_query_proto_depIdxs = []int32{
	11, // 0: typedb.protocol.Query.Req.options:type_name -> typedb.protocol.Options.Query
	12, // 1: typedb.protocol.Query.InitialRes.error:type_name -> typedb.protocol.Error
	5,  // 2: typedb.protocol.Query.InitialRes.ok:type_name -> typedb.protocol.Query.InitialRes.Ok
	9,  // 3: typedb.protocol.Query.ResPart.documents_res:type_name -> typedb.protocol.Query.ResPart.ConceptDocumentsRes
	10, // 4: typedb.protocol.Query.ResPart.rows_res:type_name -> typedb.protocol.Query.ResPart.ConceptRowsRes
	6,  // 5: typedb.protocol.Query.InitialRes.Ok.done:type_name -> typedb.protocol.Query.InitialRes.Ok.Done
	7,  // 6: typedb.protocol.Query.InitialRes.Ok.concept_document_stream:type_name -> typedb.protocol.Query.InitialRes.Ok.ConceptDocumentStream
	8,  // 7: typedb.protocol.Query.InitialRes.Ok.concept_row_stream:type_name -> typedb.protocol.Query.InitialRes.Ok.ConceptRowStream
	0,  // 8: typedb.protocol.Query.InitialRes.Ok.Done.query_type:type_name -> typedb.protocol.Query.Type
	0,  // 9: typedb.protocol.Query.InitialRes.Ok.ConceptDocumentStream.query_type:type_name -> typedb.protocol.Query.Type
	0,  // 10: typedb.protocol.Query.InitialRes.Ok.ConceptRowStream.query_type:type_name -> typedb.protocol.Query.Type
	13, // 11: typedb.protocol.Query.ResPart.ConceptDocumentsRes.documents:type_name -> typedb.protocol.ConceptDocument
	14, // 12: typedb.protocol.Query.ResPart.ConceptRowsRes.rows:type_name -> typedb.protocol.ConceptRow
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_query_proto_init() }
func file_proto_query_proto_init() {
	if File_proto_query_proto != nil {
		return
	}
	file_proto_answer_proto_init()
	file_proto_options_proto_init()
	file_proto_error_proto_init()
	file_proto_query_proto_msgTypes[2].OneofWrappers = []any{
		(*Query_InitialRes_Error)(nil),
		(*Query_InitialRes_Ok_)(nil),
	}
	file_proto_query_proto_msgTypes[3].OneofWrappers = []any{
		(*Query_ResPart_DocumentsRes)(nil),
		(*Query_ResPart_RowsRes)(nil),
	}
	file_proto_query_proto_msgTypes[4].OneofWrappers = []any{
		(*Query_InitialRes_Ok_Done_)(nil),
		(*Query_InitialRes_Ok_ConceptDocumentStream_)(nil),
		(*Query_InitialRes_Ok_ConceptRowStream_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_query_proto_rawDesc), len(file_proto_query_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_query_proto_goTypes,
		DependencyIndexes: file_proto_query_proto_depIdxs,
		EnumInfos:         file_proto_query_proto_enumTypes,
		MessageInfos:      file_proto_query_proto_msgTypes,
	}.Build()
	File_proto_query_proto = out.File
	file_proto_query_proto_goTypes = nil
	file_proto_query_proto_depIdxs = nil
}
